---
version: "3"

env:
    BIN_DIR:
        # BIN_DIR is the directory to hold the binaries. If run as root/administrator, the system directory is used.
        # Otherwise, the user's bin directory is used.
        # Task treats environmental variables as case-sensitive while Windows does not.
        sh: |
            {{- if eq OS "windows" -}}
                if net session >/dev/null 2>&1; then
                    echo '{{.ProgramData}}\taskfiles\bin'
                else
                    echo '{{.USERPROFILE}}\bin'
                fi
            {{- else -}}
                echo '{{if eq .USER "root"}}/usr/local/bin{{else}}{{.HOME}}/bin{{end}}'
            {{- end -}}

tasks:

    init:
        desc: Download the required utilities for the tasks.
        vars:
            REPO: mikefarah/yq
            NAME: 'yq{{exeExt}}'
            BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}yq{{exeExt}}'
        preconditions:
            - sh: curl --version
              msg: |
                  curl is required to download files. Please install curl and 'task init' again.
        cmds:
            - task: init-bin-dir
            - task: init-yq
            - task: init-task

    init-bin-dir:
        desc: Initialize the bin directory
        preconditions:
            - sh: mkdir --version
              platforms: [unixOS]
              msg: |
                  mkdir is required to create directories. Please install mkdir and 'task init' again.
        cmds:
            - echo Creating '{{.BIN_DIR}}'
            - |
                {{- if eq OS "windows" -}}
                    powershell -Command New-Item -Path '{{.BIN_DIR}}' -ItemType Directory
                {{- else -}}
                    mkdir --parents '{{.BIN_DIR}}'
                {{- end -}}
        status:
            - test -d '{{.BIN_DIR}}'

    init-yq:
        desc: Download yq into the bin directory.
        vars:
            # Order matters!
            BASE_NAME: yq
            REPO: mikefarah/yq
            NAME: '{{.BASE_NAME}}{{exeExt}}'
            BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.NAME}}'
            REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.BASE_NAME}}_{{OS}}_{{ARCH}}{{exeExt}}'
        preconditions:
            - sh: curl --version
              platforms: [unixOS]
              msg: |
                  curl is required to download files. Please install curl and 'task init' again.
            - task: init-bin-dir
        cmds:
            - curl --location --output '{{.BIN_NAME}}' '{{.REPO_URL}}'
            - '{{if ne OS "windows"}}chmod a+x {{.BIN_NAME}}{{end}}'
            - echo '{{.BASE_NAME}}' has been downloaded to '{{.BIN_NAME}}'
        status:
            - "'{{.BIN_NAME}}' --version"

    init-task:
        desc: Download task into the bin directory.
        vars:
            # Order matters!
            BASE_NAME: task
            REPO: go-task/task
            NAME: '{{.BASE_NAME}}{{exeExt}}'
            BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.NAME}}'
            COMPRESS_EXT: '{{if eq OS "windows"}}.zip{{else}}.tar.gz{{end}}'
            REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.BASE_NAME}}_{{OS}}_{{ARCH}}{{.COMPRESS_EXT}}'
        preconditions:
            - sh: '{{if ne OS "windows"}}curl --version{{end}}'
              msg: |
                  curl is required to download files. Please install curl and 'task init' again.
            - sh: '{{if ne OS "windows"}}tar --version{{end}}'
              msg: |
                  tar is required to extract files from archives. Please install tar and 'task init' again.
            - sh: '{{if ne OS "windows"}}gunzip --version{{end}}'
              msg: |
                  gunzip is required to uncompress files. Please install gunzip/gzip and 'task init' again.
            - task: init-bin-dir
        cmds:
            - cmd: |
                  {{if eq OS "windows"}}
                      powershell -Command '
                          $tmp_file = New-TemporaryFile
                          Remove-Item -Path $tmp_file
                          $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
                          $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.BASE_NAME}}{{.COMPRESS_EXT}}"
                          $ProgressPreference = "SilentlyContinue"
                          Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
                          Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
                          Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
                          Remove-Item -Path $tmp_dir -Recurse
                      '
                  {{else}}
                      curl --location --output - '{{.REPO_URL}}' |
                      tar -C '{{.BIN_DIR}}' -zxf - {{.BASE_NAME}}
                      chmod a+x {{.BIN_NAME}}
                  {{end}}
            - echo '{{.BASE_NAME}}' has been downloaded to '{{.BIN_NAME}}'
        status:
            - "'{{.BIN_NAME}}' --version"

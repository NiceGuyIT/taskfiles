---
version: "3"

env:
  BIN_DIR:
    # BIN_DIR is the directory to hold the binaries. If run as root/administrator, the system directory is used.
    # Otherwise, the user's bin directory is used.
    # Task treats environmental variables as case-sensitive while Windows does not.
    sh: |
      {{- if eq OS "windows" -}}
          if net session >/dev/null 2>&1; then
              echo '{{.ProgramData}}\taskfiles\bin'
          else
              echo '{{.USERPROFILE}}\bin'
          fi
      {{- else -}}
          echo '{{if eq .USER "root"}}/usr/local/bin{{else}}{{.HOME}}/bin{{end}}'
      {{- end -}}

includes:
  github: .taskfiles/GitHubTasks.yaml

tasks:

  init:
    desc: Download the required utilities for the tasks.
    vars:
      REPO: mikefarah/yq
      NAME: 'yq{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}yq{{exeExt}}'
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
    cmds:
      - task: init-bin-dir
      - task: init-yq
      - task: init-task

  init-bin-dir:
    desc: Initialize the bin directory
    preconditions:
      - sh: '{{if ne OS "windows"}}command -v mkdir{{end}}'
        msg: |
          mkdir is required to create directories. Please install mkdir and 'task init' again.
    cmds:
      - echo Creating '{{.BIN_DIR}}'
      - |
        {{- if eq OS "windows" -}}
            powershell -Command New-Item -Path '{{.BIN_DIR}}' -ItemType Directory
        {{- else -}}
            mkdir --parents '{{.BIN_DIR}}'
        {{- end -}}
    status:
      - test -d '{{.BIN_DIR}}'

  init-yq:
    desc: Download yq into the bin directory.
    vars:
      # Order matters!
      BASE_NAME: yq
      REPO: mikefarah/yq
      NAME: '{{.BASE_NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.NAME}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.BASE_NAME}}_{{OS}}_{{ARCH}}{{exeExt}}'
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
      - task: init-bin-dir
    cmds:
      - curl --location --output '{{.BIN_NAME}}' '{{.REPO_URL}}'
      - '{{if ne OS "windows"}}chmod a+x {{.BIN_NAME}}{{end}}'
      - echo '{{.BASE_NAME}}' has been downloaded to '{{.BIN_NAME}}'
    status:
      - "'{{.BIN_NAME}}' --version"

  init-task:
    desc: Download task into the bin directory.
    vars:
      # Order matters!
      BASE_NAME: task
      REPO: go-task/task
      NAME: '{{.BASE_NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.NAME}}'
      COMPRESS_EXT: '{{if eq OS "windows"}}.zip{{else}}.tar.gz{{end}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.BASE_NAME}}_{{OS}}_{{ARCH}}{{.COMPRESS_EXT}}'
    preconditions:
      - sh: '{{if ne OS "windows"}}command -v curl{{end}}'
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v tar{{end}}'
        msg: |
          tar is required to extract files from archives. Please install tar and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v gunzip{{end}}'
        msg: |
          gunzip is required to uncompress files. Please install gunzip/gzip and 'task init' again.
      - task: init-bin-dir
    cmds:
      - cmd: |
          {{if eq OS "windows"}}
              powershell -Command '
                  $tmp_file = New-TemporaryFile
                  Remove-Item -Path $tmp_file
                  $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
                  $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.BASE_NAME}}{{.COMPRESS_EXT}}"
                  $ProgressPreference = "SilentlyContinue"
                  Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
                  Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
                  Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
                  Remove-Item -Path $tmp_dir -Recurse
              '
          {{else}}
              curl --location --output - '{{.REPO_URL}}' |
              tar -C '{{.BIN_DIR}}' -zxf - {{.BASE_NAME}}
              chmod a+x {{.BIN_NAME}}
          {{end}}
      - echo '{{.BASE_NAME}}' has been downloaded to '{{.BIN_NAME}}'
    status:
      - "'{{.BIN_NAME}}' --version"

  ghrel:
    desc: Download the ghrel binary
    vars:
      NAME: ghrel
      OWNER: jreisinger
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{if eq OS "windows"}}.zip{{else}}.tar.gz{{end}}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      ASSET_PATTERN: '{{.NAME}}_*_{{OS}}_{{ARCH}}{{.COMPRESS_EXT}}'
      DOWNLOAD_URL:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.ASSET_PATTERN}}") | .browser_download_url'
      PACKAGE_NAME:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.ASSET_PATTERN}}") | .name'
      PACKAGE_DIR: '{{trimSuffix .COMPRESS_EXT .PACKAGE_NAME}}'
    preconditions:
      - sh: '{{if ne OS "windows"}}command -v curl{{end}}'
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v tar{{end}}'
        msg: |
          tar is required to extract files from archives. Please install tar and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v gunzip{{end}}'
        msg: |
          gunzip is required to uncompress files. Please install gunzip/gzip and 'task init' again.
      - task: init-bin-dir
    cmds:
      - cmd: |
          {{if eq OS "windows"}}
            powershell -Command '
              $tmp_file = New-TemporaryFile
              Remove-Item -Path $tmp_file
              $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
              $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.BASE_NAME}}{{.COMPRESS_EXT}}"
              $ProgressPreference = "SilentlyContinue"
              Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
              Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
              Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
              Remove-Item -Path $tmp_dir -Recurse
            '
          {{else}}
            curl --silent --location --output - '{{.DOWNLOAD_URL}}' |
            tar --directory '{{.BIN_DIR}}' -zxf - {{.FILE_NAME}}
            chmod a+x {{.BIN_NAME}}
          {{end}}
    status:
      # ghrel doesn't have a --version flag
      - "'{{.BIN_NAME}}' --help"

  xh:
    desc: Download the xh binary
    vars:
      NAME: xh
      OWNER: ducaale
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{if eq OS "windows"}}.zip{{else}}.tar.gz{{end}}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      # Some packages use x86_64 instead of amd64
      ARCH: '{{if eq ARCH "amd64"}}x86_64{{else}}{{ARCH}}{{end}}'
      DOWNLOAD_URL:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.NAME}}-*-{{.ARCH}}-*-{{OS}}-*{{.COMPRESS_EXT}}") | .browser_download_url'
      PACKAGE_NAME:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.NAME}}-*-{{.ARCH}}-*-{{OS}}-*{{.COMPRESS_EXT}}") | .name'
      PACKAGE_DIR: '{{trimSuffix .COMPRESS_EXT .PACKAGE_NAME}}'
    preconditions:
      - sh: '{{if ne OS "windows"}}command -v curl{{end}}'
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v tar{{end}}'
        msg: |
          tar is required to extract files from archives. Please install tar and 'task init' again.
      - sh: '{{if ne OS "windows"}}command -v gunzip{{end}}'
        msg: |
          gunzip is required to uncompress files. Please install gunzip/gzip and 'task init' again.
      - task: init-bin-dir
    cmds:
      - cmd: |
          {{if eq OS "windows"}}
            powershell -Command '
              $tmp_file = New-TemporaryFile
              Remove-Item -Path $tmp_file
              $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
              $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.BASE_NAME}}{{.COMPRESS_EXT}}"
              $ProgressPreference = "SilentlyContinue"
              Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
              Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
              Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
              Remove-Item -Path $tmp_dir -Recurse
            '
          {{else}}
            curl --silent --location --output - '{{.DOWNLOAD_URL}}' |
            tar --directory '{{.BIN_DIR}}' --strip-components 1 -zxf - '{{.PACKAGE_DIR}}/{{.FILE_NAME}}'
            chmod a+x '{{.BIN_NAME}}'
          {{end}}
    status:
      - "'{{.BIN_NAME}}' --version"

  xh-test:
    desc: Download the xh binary
    vars:
      NAME: xh
      OWNER: ducaale
      COMPRESS_EXT: '{{if eq OS "windows"}}.zip{{else}}.tar.gz{{end}}'
      # Some packages use x86_64 instead of amd64
      ARCH: '{{if eq ARCH "amd64"}}x86_64{{else}}{{ARCH}}{{end}}'
      ASSET_PATTERN: '{{.NAME}}-*-{{.ARCH}}-*-{{OS}}-*{{.COMPRESS_EXT}}'
    preconditions:
      - task: init-bin-dir
    cmds:
      # vars are not passed to subtasks automatically.
      # https://taskfile.dev/usage/#variables
      # https://github.com/go-task/task/issues/888#issuecomment-1273264393
      - task: github:download
        vars: {
          NAME: '{{.NAME}}',
          OWNER: '{{.OWNER}}',
          ASSET_PATTERN: '{{.ASSET_PATTERN}}',
          COMPRESS_EXT: '{{.COMPRESS_EXT}}',
          ARCH: '{{.ARCH}}',
        }
    status:
      # This only checks if the executable exists. This is to prevent downloading the file twice: once as the system
      # and once as the user.
      # TODO: Check for version numbers to see if it needs to be updated.
      - "'{{.NAME}}' --version"

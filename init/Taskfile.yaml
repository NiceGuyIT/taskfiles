---
version: "3"

tasks:

  all:
    desc: Initialize (download) the necessary utilities.
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install 'curl' and try again.
    cmds:
      - task: create-bin-dir
        vars: {
          BIN_DIR: '{{.BIN_DIR}}'
        }
      - task: dl-yq
      - task: dl-task
      - task: dl-xh
      - task: dl-coreutils
    status:
      - task --silent init:create-bin-dir
      - task --silent init:dl-yq
      - task --silent init:dl-task
      - task --silent init:dl-xh
      - task --silent init:dl-coreutils

  create-bin-dir:
    desc: Create the bin directory
    preconditions:
      - sh: '[ ! -z {{ quote .BIN_DIR }} ]'
        msg: '.BIN_DIR is not defined'
    cmds:
      - cmd: 'echo "BIN_DIR: {{.BIN_DIR}}"'
      - cmd: |
          mkdir --parents {{ osClean .BIN_DIR }}
        platforms: [linux, darwin]
        # FIXME: Check if BIN_DIR is already in the path for the user
      - cmd: |
          powershell -NonInteractive -NoProfile -NoLogo -InputFormat text -OutputFormat text -Command '
            if (-not (Test-Path -Path {{ squote .BIN_DIR }})) {
              New-Item -Path {{ squote .BIN_DIR }} -ItemType Directory
            }
            $value = Get-ItemProperty -Path HKCU:\Environment -Name Path
            $newpath = $value.Path += "{{ (print ";" .BIN_DIR) }}"
            Set-ItemProperty -Path HKCU:\Environment -Name Path -Value $newpath
          '
        platforms: [windows]
    status:
      - test -d {{ osClean .BIN_DIR }}

  dl-yq:
    # https://github.com/mikefarah/yq
    desc: Download 'yq' into the bin directory
    deps:
      - create-bin-dir
    vars:
      # Order matters!
      NAME: yq
      OWNER: mikefarah
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{ fromSlash "/" }}{{.FILE_NAME}}'
      ASSET_PATTERN: '{{.NAME}}_{{OS}}_{{ARCH}}{{exeExt}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.ASSET_PATTERN}}'
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install 'curl' and try again.
    cmds:
      - curl --silent --location --output {{ squote .BIN_NAME }} {{ squote .REPO_URL }}
      - '{{ if ne OS "windows"}}chmod a+x {{.BIN_NAME}}{{ end }}'
    status:
      - '"{{ osClean (print .BIN_DIR "/" .NAME) }}" --version'

  dl-task:
    # https://github.com/go-task/task/
    desc: Download 'task' into the bin directory
    deps:
      - create-bin-dir
    vars:
      # Order matters!
      NAME: task
      OWNER: go-task
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{ if eq OS "windows"}}.zip{{ else }}.tar.gz{{ end }}'
      ASSET_PATTERN: '{{.NAME}}_{{OS}}_{{ARCH}}{{.COMPRESS_EXT}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.ASSET_PATTERN}}'
    preconditions:
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
    cmds:
      - cmd: |
          curl --location --output - {{ squote .REPO_URL }} |
          tar -C {{ squote .BIN_DIR }} -zxf - {{ squote .NAME}}
          chmod a+x {{.BIN_NAME}}
        platforms: [linux, darwin]
      - cmd: |
          powershell -NonInteractive -NoProfile -NoLogo -InputFormat text -OutputFormat text -Command '
            $tmp_file = New-TemporaryFile
            Remove-Item -Path $tmp_file
            $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
            $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}{{.COMPRESS_EXT}}"
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -URI {{ quote .REPO_URL }} -OutFile $zip_file
            Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
            Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath {{ quote .FILE_NAME }}) -Destination {{.BIN_DIR}}
            Remove-Item -Path $tmp_dir -Recurse
          '
        platforms: [windows]
    status:
      - '"{{ osClean (print .BIN_DIR "/" .NAME) }}" --version'

  dl-xh:
    # https://github.com/ducaale/xh
    desc: Download 'xh' into the bin directory
    deps:
      - create-bin-dir
      - dl-yq
    vars:
      NAME: xh
      OWNER: ducaale
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{ if eq OS "windows"}}.zip{{ else }}.tar.gz{{ end }}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      # Some packages use x86_64 instead of amd64
      ARCH: '{{ if or (eq ARCH "amd64") (eq ARCH "arm64") }}x86_64{{ else }}{{ARCH}}{{ end }}'
      ASSET_PATTERN: '{{.NAME}}-*-{{.ARCH}}-*-{{OS}}*{{.COMPRESS_EXT}}'
      # FIXME: The dynamic variables are executed before determining the status, resulting in 2 unauthenticated calls
      # FIXME: to the GitHub API. This should be fixed.
      # FIXME: More importantly, tasks that depend on 'xh' will also result in 2 API calls.
      # FIXME: If many tasks are run concurrently, it's possible to exceed the API limits and get locked out for a
      # FIXME: minute.
      DOWNLOAD_URL:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=={{ quote .ASSET_PATTERN }}) | .browser_download_url'
      PACKAGE_NAME:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=={{ quote .ASSET_PATTERN }}) | .name'
      PACKAGE_DIR: '{{ trimSuffix .COMPRESS_EXT .PACKAGE_NAME }}'
    preconditions:
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
    cmds:
      - cmd: |
          curl --silent --location --output - {{ squote .DOWNLOAD_URL }} |
          tar --directory {{ squote .BIN_DIR }} --strip-components 1 -zxf - {{ squote (print .PACKAGE_DIR "/" .FILE_NAME) }}
          chmod a+x {{ squote .BIN_NAME}}
        platforms: [linux, darwin]
      - cmd: |
          powershell -NonInteractive -NoProfile -NoLogo -InputFormat text -OutputFormat text -Command '
            $tmp_file = New-TemporaryFile
            Remove-Item -Path $tmp_file
            $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
            $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}{{.COMPRESS_EXT}}"
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -URI {{ quote .DOWNLOAD_URL }} -OutFile $zip_file
            Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
            $bin_file = Join-Path -Path $tmp_dir -ChildPath {{ quote .PACKAGE_DIR }} | Join-Path -ChildPath {{ quote .FILE_NAME }}
            Copy-Item -Path $bin_file -Destination {{ quote .BIN_DIR }}
            Remove-Item -Path $tmp_dir -Recurse
          '
        platforms: [windows]
    status:
      - '"{{ osClean (print .BIN_DIR "/" .NAME) }}" --version'

  dl-coreutils:
    # https://github.com/uutils/coreutils
    desc: Install 'coreutils', cross-platform Rust rewrite of the GNU coreutils
    deps:
      - create-bin-dir
    vars:
      # Order matters!
      NAME: coreutils
      OWNER: uutils
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{ if eq OS "windows"}}.zip{{ else }}.tar.gz{{ end }}'
      ARCH: '{{if eq ARCH "amd64"}}x86_64{{else}}{{ARCH}}{{end}}'
      ASSET_PATTERN: '{{.NAME}}-*-{{.ARCH}}-*-{{OS}}{{ if eq OS "linux"}}-musl{{ else if eq OS "windows" }}-gnu{{ end }}{{.COMPRESS_EXT}}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      # FIXME: The dynamic variables are executed before determining the status, resulting in 2 unauthenticated calls
      # FIXME: to the GitHub API. This should be fixed.
      # FIXME: More importantly, tasks that depend on 'xh' will also result in 2 API calls.
      # FIXME: If many tasks are run concurrently, it's possible to exceed the API limits and get locked out for a
      # FIXME: minute.
      DOWNLOAD_URL:
        sh: |
          curl --silent --location --output - {{ squote .REPO_URL}} |
          yq --unwrapScalar '.assets[] | select(.name=={{ quote .ASSET_PATTERN }}) | .browser_download_url'
      PACKAGE_NAME:
        sh: |
          curl --silent --location --output - {{ squote .REPO_URL}} |
          yq --unwrapScalar '.assets[] | select(.name=={{ quote .ASSET_PATTERN }}) | .name'
      PACKAGE_DIR: '{{ trimSuffix .COMPRESS_EXT .PACKAGE_NAME }}'
    preconditions:
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
    cmds:
      - cmd: |
          curl --silent --location --output - {{ squote .DOWNLOAD_URL }} |
          tar --directory {{ squote .BIN_DIR }} --strip-components 1 -zxf - {{ squote (print .PACKAGE_DIR "/" .FILE_NAME) }}
          chmod a+x {{ squote .BIN_NAME}}
        platforms: [linux, darwin]
      - cmd: |
          powershell -NonInteractive -NoProfile -NoLogo -InputFormat text -OutputFormat text -Command '
            $tmp_file = New-TemporaryFile
            Remove-Item -Path $tmp_file
            $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
            $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}{{.COMPRESS_EXT}}"
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -URI {{ quote .DOWNLOAD_URL }} -OutFile $zip_file
            Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
            $bin_file = Join-Path -Path $tmp_dir -ChildPath {{ quote .PACKAGE_DIR }} | Join-Path -ChildPath {{ quote .FILE_NAME }}
            Copy-Item -Path $bin_file -Destination {{ quote .BIN_DIR }}
            Remove-Item -Path $tmp_dir -Recurse
          '
        platforms: [windows]
    status:
      - '"{{ osClean (print .BIN_DIR "/" .NAME) }}" --help'

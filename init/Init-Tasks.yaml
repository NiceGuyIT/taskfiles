---
version: "3"

tasks:

  all:
    desc: Initialize (download) the necessary utilities.
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install 'curl' and try again.
    cmds:
      - task: create-bin-dir
      - task: dl-yq
      - task: dl-task
      - task: dl-xh

  create-bin-dir:
    desc: Create the bin directory
    preconditions:
      - sh: '[ "{{.BIN_DIR}}" != "" ]'
        msg: '.BIN_DIR is not defined'
    cmds:
      - |
        {{- if eq OS "windows" -}}
            powershell -Command New-Item -Path '{{.BIN_DIR}}' -ItemType Directory
        {{- else -}}
            mkdir --parents '{{.BIN_DIR}}'
        {{- end -}}
    status:
      - test -d '{{.BIN_DIR}}'

  dl-yq:
    # https://github.com/mikefarah/yq
    desc: Download 'yq' into the bin directory
    deps:
      - create-bin-dir
    vars:
      # Order matters!
      NAME: yq
      OWNER: mikefarah
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{ fromSlash "/" }}{{.FILE_NAME}}'
      ASSET_PATTERN: '{{.NAME}}_{{OS}}_{{ARCH}}{{exeExt}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.ASSET_PATTERN}}'
    preconditions:
      - sh: command -v curl
        msg: |
          curl is required to download files. Please install 'curl' and try again.
    cmds:
      - curl --silent --location --output '{{.BIN_NAME}}' '{{.REPO_URL}}'
      - '{{ if ne OS "windows"}}chmod a+x {{.BIN_NAME}}{{ end }}'
    status:
      - "'{{.BIN_NAME}}' --version"

  dl-xh:
    # https://github.com/ducaale/xh
    desc: Download 'xh' into the bin directory
    deps:
      - create-bin-dir
      - dl-yq
    vars:
      NAME: xh
      OWNER: ducaale
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{ if eq OS "windows"}}.zip{{ else }}.tar.gz{{ end }}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      # Some packages use x86_64 instead of amd64
      ARCH: '{{ if or (eq ARCH "amd64") (eq ARCH "arm64") }}x86_64{{ else }}{{ARCH}}{{ end }}'
      ASSET_PATTERN: '{{.NAME}}-*-{{.ARCH}}-*-{{OS}}*{{.COMPRESS_EXT}}'
      DOWNLOAD_URL:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.ASSET_PATTERN}}") | .browser_download_url'
      PACKAGE_NAME:
        sh: |
          curl --silent --location --output - '{{.REPO_URL}}' |
          yq --unwrapScalar '.assets[] | select(.name=="{{.ASSET_PATTERN}}") | .name'
      PACKAGE_DIR: '{{ trimSuffix .COMPRESS_EXT .PACKAGE_NAME }}'
    preconditions:
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
    cmds:
      - cmd: |
          {{ if eq OS "windows"}}
            powershell -Command '
              $tmp_file = New-TemporaryFile
              Remove-Item -Path $tmp_file
              $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
              $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}{{.COMPRESS_EXT}}"
              $ProgressPreference = "SilentlyContinue"
              Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
              Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
              Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
              Remove-Item -Path $tmp_dir -Recurse
            '
          {{ else }}
            curl --silent --location --output - '{{.DOWNLOAD_URL}}' |
            tar --directory '{{.BIN_DIR}}' --strip-components 1 -zxf - '{{.PACKAGE_DIR}}/{{.FILE_NAME}}'
            chmod a+x '{{.BIN_NAME}}'
          {{ end }}
    status:
      - "'{{.BIN_NAME}}' --version"

  dl-task:
    # https://github.com/go-task/task/
    desc: Download 'task' into the bin directory
    deps:
      - create-bin-dir
    vars:
      # Order matters!
      NAME: task
      OWNER: go-task
      REPO: '{{.OWNER}}/{{.NAME}}'
      FILE_NAME: '{{.NAME}}{{exeExt}}'
      BIN_NAME: '{{.BIN_DIR}}{{fromSlash "/"}}{{.FILE_NAME}}'
      COMPRESS_EXT: '{{ if eq OS "windows"}}.zip{{ else }}.tar.gz{{ end }}'
      ASSET_PATTERN: '{{.NAME}}_{{OS}}_{{ARCH}}{{.COMPRESS_EXT}}'
      REPO_URL: 'https://github.com/{{.REPO}}/releases/latest/download/{{.ASSET_PATTERN}}'
    preconditions:
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
    cmds:
      - cmd: |
          {{ if eq OS "windows"}}
            powershell -Command '
              $tmp_file = New-TemporaryFile
              Remove-Item -Path $tmp_file
              $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
              $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}{{.COMPRESS_EXT}}"
              $ProgressPreference = "SilentlyContinue"
              Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
              Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
              Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
              Remove-Item -Path $tmp_dir -Recurse
            '
          {{ else }}
            curl --location --output - '{{.REPO_URL}}' |
            tar -C '{{.BIN_DIR}}' -zxf - {{.NAME}}
            chmod a+x {{.BIN_NAME}}
          {{ end }}
    status:
      - "'{{.BIN_NAME}}' --version"

  ################################################################################
  # GitHub tasks
  ################################################################################

  github-download:
    # Do not use internal until the corresponding github-get-attribute task is marked internal.
    # internal: true
    desc: Download a release from GitHub
    vars:
      # Order matters!
      REPO: '{{.REPO | default (print .OWNER "/" .NAME) }}'
      FILE_NAME: '{{.FILE_NAME | default (print .NAME exeExt) }}'
      ARCH: '{{ if .ARCH}}{{.ARCH}}{{ else }}{{ARCH}}{{ end }}'
      BIN_NAME: '{{.BIN_DIR}}{{ fromSlash "/" }}{{.FILE_NAME}}'
      REPO_URL: 'https://api.github.com/repos/{{.REPO}}/releases/latest'
      # Go templates {{ and }} have to be quoted in yaml, forcing the value to be interpreted as a string.
      ASSET_DIR: '{{ if eq .ASSET_DIR "true" }}true{{ end }}'
      # Some packages use x86_64 instead of amd64
      DOWNLOAD_URL:
        # A variable cannot be assigned from a task, only the shell output.
        # https://github.com/go-task/task/issues/178
        sh: |
          task --silent init:github-get-attribute "ATTRIBUTE='browser_download_url'" "REPO_URL='{{.REPO_URL}}'" "ASSET_PATTERN='{{.ASSET_PATTERN}}'"
      PACKAGE_NAME:
        sh: |
          task --silent init:github-get-attribute "ATTRIBUTE='name'" "REPO_URL='{{.REPO_URL}}'" "ASSET_PATTERN='{{.ASSET_PATTERN}}'"
      # TAG_NAME is the version. Currently not used.
      TAG_NAME:
        sh: |
          task --silent init:github-get-attribute "ATTRIBUTE='tag_name'" "REPO_URL='{{.REPO_URL}}'" "ASSET_PATTERN='{{.ASSET_PATTERN}}'"
      COMPRESS_EXT: '{{.COMPRESS_EXT | default "" }}'
      PACKAGE_DIR: '{{.PACKAGE_DIR | default (trimSuffix .COMPRESS_EXT .PACKAGE_NAME) }}'
    preconditions:
      - task: all
      - sh: '[ "{{.NAME}}" != "" ]'
        msg: '.NAME is not defined'
      - sh: '[ "{{.OWNER}}" != "" ]'
        msg: '.OWNER is not defined'
      - sh: '[ "{{.ASSET_PATTERN}}" != "" ]'
        msg: '.ASSET_PATTERN is not defined'
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install 'curl' and try again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install 'tar' and try again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install 'gunzip'/'gzip' and try again.
      - sh: '{{ if ne OS "windows"}}command -v unzip{{ end }}'
        msg: |
          unzip is required to uncompress files. Please install 'unzip'/'zip' and try again.
    cmds:
      # Use this for debugging
      # - cmd: 'echo "NAME: {{.NAME}}"'
      # - cmd: 'echo "OWNER: {{.OWNER}}"'
      # - cmd: 'echo "REPO: {{.REPO}}"'
      # - cmd: 'echo "ARCH: {{.ARCH}}"'
      # - cmd: 'echo "ASSET_PATTERN: {{.ASSET_PATTERN}}"'
      # - cmd: 'echo "REPO_URL: {{.REPO_URL}}"'
      # - cmd: 'echo "ASSET_DIR: {{.ASSET_DIR}}"'
      # - cmd: 'echo "ASSET_DIR boolean: {{ if .ASSET_DIR }}true{{ else }}false{{ end }}"'
      # - cmd: 'echo "DOWNLOAD_URL: {{.DOWNLOAD_URL}}"'
      # - cmd: 'echo "PACKAGE_NAME: {{.PACKAGE_NAME}}"'
      # - cmd: 'echo "PACKAGE_DIR: {{.PACKAGE_DIR}}"'
      # - cmd: 'echo "COMPRESS_EXT: {{.COMPRESS_EXT}}"'
      - task: github-download-asset
        vars: {
          COMPRESS_EXT: '{{.COMPRESS_EXT}}',
          PACKAGE_NAME: '{{.PACKAGE_NAME}}',
          DOWNLOAD_URL: '{{.DOWNLOAD_URL}}',
          ASSET_DIR: '{{.ASSET_DIR}}',
          PACKAGE_DIR: '{{.PACKAGE_DIR}}',
          FILE_NAME: '{{.FILE_NAME}}',
          BIN_NAME: '{{.BIN_NAME}}',
          BIN_DIR: '{{.BIN_DIR}}',
        }
    status:
      - "'{{.BIN_NAME}}' --version"

  github-download-asset:
    desc: Download an asset from GitHub
    preconditions:
      - task: all
      - sh: '[ "{{.PACKAGE_NAME}}" != "" ]'
        msg: '.PACKAGE_NAME is not defined'
      - sh: '[ "{{.PACKAGE_DIR}}" != "" ]'
        msg: '.PACKAGE_DIR is not defined'
      - sh: '[ "{{.DOWNLOAD_URL}}" != "" ]'
        msg: '.DOWNLOAD_URL is not defined'
      - sh: '[ "{{.FILE_NAME}}" != "" ]'
        msg: '.FILE_NAME is not defined'
      - sh: '[ "{{.BIN_NAME}}" != "" ]'
        msg: '.BIN_NAME is not defined'
      - sh: 'test -d "{{.BIN_DIR}}"'
        msg: '{{.BIN_DIR}} does not exist'
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
        msg: |
          curl is required to download files. Please install curl and 'task init' again.
      - sh: '{{ if ne OS "windows"}}command -v tar{{ end }}'
        msg: |
          tar is required to extract files from archives. Please install tar and 'task init' again.
      - sh: '{{ if ne OS "windows"}}command -v gunzip{{ end }}'
        msg: |
          gunzip is required to uncompress files. Please install gunzip/gzip and 'task init' again.
      - sh: '{{ if ne OS "windows"}}command -v unzip{{ end }}'
        msg: |
          unzip is required to uncompress files. Please install unzip/zip and try again.
    cmds:
      # Use this for debugging
      - cmd: 'echo "COMPRESS_EXT: {{.COMPRESS_EXT}}"'
      - cmd: 'echo "PACKAGE_NAME: {{.PACKAGE_NAME}}"'
      - cmd: 'echo "PACKAGE_DIR: {{.PACKAGE_DIR}}"'
      - cmd: 'echo "ASSET_DIR: {{.ASSET_DIR}}"'
      - cmd: 'echo "DOWNLOAD_URL: {{.DOWNLOAD_URL}}"'
      - cmd: 'echo "FILE_NAME: {{.FILE_NAME}}"'
      - cmd: 'echo "BIN_NAME: {{.BIN_NAME}}"'
      - cmd: 'echo "BIN_DIR: {{.BIN_DIR}}"'
      - cmd: 'echo "ASSET_DIR boolean: {{ if .ASSET_DIR }}true{{ else }}false{{ end }}"'
      - cmd: |
          powershell -Command '
            $tmp_file = New-TemporaryFile
            Remove-Item -Path $tmp_file
            $tmp_dir = New-Item -ItemType Directory -Path $(Join-Path -Path $ENV:Temp -ChildPath $tmp_file.Name)
            $zip_file = Join-Path -Path $tmp_dir -ChildPath "{{.BASE_NAME}}{{.COMPRESS_EXT}}"
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -URI "{{.REPO_URL}}" -OutFile $zip_file
            Expand-Archive -Path $zip_file -DestinationPath $tmp_dir
            Copy-Item -Path $(Join-Path -Path $tmp_dir -ChildPath "{{.NAME}}") -Destination {{.BIN_DIR}}
            Remove-Item -Path $tmp_dir -Recurse
          '
        platforms: [windows]
      - cmd: |
          {{ if eq .COMPRESS_EXT ".zip" }}
            tmp_dir=$(mktemp --directory)
            xh --body --follow --output "$tmp_dir{{fromSlash "/"}}{{.PACKAGE_NAME}}" '{{.DOWNLOAD_URL}}'
            unzip -p "$tmp_dir{{fromSlash "/"}}{{.PACKAGE_NAME}}" '{{ if .ASSET_DIR -}}{{.PACKAGE_DIR}}/{{ end }}{{.FILE_NAME}}' > {{.BIN_NAME}}
            rm -r "$tmp_dir"
          {{ else if eq .COMPRESS_EXT ".tar.gz" }}
            xh --body --follow --stream '{{.DOWNLOAD_URL}}' |
            {{ if .ASSET_DIR -}}
              tar --directory '{{.BIN_DIR}}' -zxf - --strip-components 1 '{{.PACKAGE_DIR}}/{{.FILE_NAME}}'
            {{- else -}}
              tar --directory '{{.BIN_DIR}}' -zxf - '{{.FILE_NAME}}'
            {{- end -}}
          {{ else }}
            xh --body --download --follow --output '{{.BIN_NAME}}' '{{.DOWNLOAD_URL}}'
          {{ end }}
          chmod a+x '{{.BIN_NAME}}'
        platforms: [linux, darwin]


  github-get-attribute:
    # github-get-attribute is an internal task but cannot be declared internal because the download task runs 'task' externally
    # to assign a variable from a task. As of v3.21.0, a variable cannot be assigned from a task, only the shell output.
    # https://github.com/go-task/task/issues/178
    # internal: true
    desc: Get an attribute using the GitHub API. Internal only.
    preconditions:
      - sh: '[ "{{.REPO_URL}}" != "" ]'
      - sh: '[ "{{.ASSET_PATTERN}}" != "" ]'
      - sh: '[ "{{.ATTRIBUTE}}" != "" ]'
      - sh: '{{ if ne OS "windows"}}command -v curl{{ end }}'
      - sh: '{{ if ne OS "windows"}}command -v yq{{ end }}'
    cmds:
      - cmd: |
          powershell -Command 'Write-Output "FIXME: Not implemented"'
        platforms: [windows]
      - cmd: |
          declare -a asset=($(
            curl --silent --location --output - '{{.REPO_URL}}' |
            yq --unwrapScalar '.assets[] | select(.name=="{{.ASSET_PATTERN}}") | .{{.ATTRIBUTE}}'
          ))
          if [[ ${#asset[@]} -ne 1 ]]; then
            echo 'ASSET_PATTERN did not match exactly 1 asset. Please check the ASSET_PATTERN for correctness.'
            echo 'ASSET_PATTERN: {{.ASSET_PATTERN}}'
            exit 1
          else
            echo ${asset[@]}
          fi
        platforms: [linux, darwin]
